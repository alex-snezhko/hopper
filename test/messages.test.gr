import Hopper from "../hopper"
import * from "./grain-test"
import Map from "map"

let req: Hopper.Request = {
  _message: {
    _wagiEnv: Map.make(),
    _params: Map.make(),
    _query: Map.make()
  },
  _headers: Map.fromList([("Content-Type", "text/plain")]),
  _body: "Sample request body",
  _variables: Map.make()
}

testMultiple("method-string conversions", [
  ("GET", Hopper.Get),
  ("POST", Hopper.Post),
  ("CONNECT", Hopper.Method("CONNECT"))
], ((str, method)) => {
  assertThat(Hopper.stringToMethod(str), equals(method))
  assertThat(Hopper.methodToString(method), equals(str))
})

testMultiple("status-code conversions", [
  (200, Hopper.HttpOk),
  (409, Hopper.Conflict),
  (110, Hopper.Status(110)),
], ((code, status)) => {
  assertThat(Hopper.codeToStatus(code), equals(status))
  assertThat(Hopper.statusToCode(status), equals(code))
})

testMultiple("isInformationalStatus", [
  (Hopper.Continue, true),
  (Hopper.HttpOk, false),
  (Hopper.Status(100), true),
  (Hopper.Status(200), false),
], ((status, expected)) => {
  assertThat(Hopper.isInformationalStatus(status), equals(expected))
})

testMultiple("guessMimeType", [
  ("hello.txt", "text/plain"),
  ("package.json", "application/json"),
  ("noext", "application/octet-stream"),
], ((fileName, expected)) => {
  assertThat(Hopper.guessMimeType(fileName), equals(expected))
})

test("file", () => {
  let res = Hopper.file("sample.txt")
  assertThat(res._headers, equals(Map.fromList([("Content-Type", "text/plain")])))
  assertThat(res._body, equals("First line\nSecond line"))

  let res = Hopper.file("whoops")
  assertThat(Hopper.status(res), equals(Hopper.NotFound))
})

let makeRequest = (contentType, body) => {
  _message: {
    _wagiEnv: Map.make(),
    _params: Map.make(),
    _query: Map.make()
  },
  _headers: Map.fromList([("Content-Type", contentType)]),
  _body: body,
  _variables: Map.make()
}: Hopper.Request

test("variables", () => {
  let req = makeRequest("text/plain", "")
  assertThat(Hopper.variable("var", req), equals(Err(Hopper.NotSet)))
  Hopper.setVariable("var", "stringVal", req)
  assertThat(Hopper.variable("var", req), equals(Ok("stringVal")))
  Hopper.setVariable("var", 123, req)
  assertThat(Hopper.variable("var", req), equals(Ok(123)))
})
